/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define OTHER_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
			quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		td: tapdance {
			compatible = "zmk,behavior-hold-tap";
			label = "tap dance";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick_tap_ms = <200>;
			flavor = "tap-preffered";
			bindings = <&kp>, <&kp>;
		};
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q      &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I           &kp O         &kp P
                &kp A      &kp S      &hm LALT D  &hm LGUI  F    &kp G         &kp H            &hm RGUI J     &hm RALT K      &kp L         &kp SEMI
                &kp Z      &kp X      &kp C       &kp V          &kp B         &kp N            &kp M          &td COMMA EXCL  &td DOT QMARK &kp BKSP
                                                  &kp SPACE      &sk LSHIFT    &sk RCTRL        &to NAV_L
            >;
        };

        nav_layer {
            bindings = <
                &kp ESC    &bt BT_PRV &bt BT_NXT  &bt BT_CLR      &trans       &trans           &kp HOME       &kp PG_DN       &kp PG_UP     &kp END
                &kp TAB    &trans     &trans      &trans          &trans       &trans           &kp LARW       &kp DARW        &kp UARW      &kp RARW
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans          &trans        &kp ENTER
                                                  &to DEF_L       &sk LALT     &kp ESC          &to NUM_L
            >;
        };

        num_layer {
            bindings = <
                &kp HASH   &kp PRCNT  &kp LBRC    &kp RBRC        &kp BSLH      &kp FSLH        &kp N7        &kp N8           &kp N9        &kp MINUS
                &kp APOS   &kp DQT    &kp LPAR    &kp RPAR        &kp EQUAL     &kp KP_MULTIPLY &kp N4        &kp N5           &kp N6        &kp PLUS
                &kp AMPS   &kp DLLR   &kp LBKT    &kp RBKT        &kp PIPE      &kp DOT         &kp N1        &kp N2           &kp N3        &kp ENTER
                                                  &to DEF_L       &kp LGUI      &kp N0          &trans
            >;
        };

		other_layer {
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans          &trans        &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans          &trans        &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &trans          &trans        &trans
                                                  &to DEF_L       &trans       &trans           &trans
            >;
        };
    };
};
